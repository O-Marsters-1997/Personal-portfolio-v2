name: Deploy to Production

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

on:
  push:
    tags:
      - "*"

jobs:
  deploy_personal_site:
    if: startsWith(github.ref, 'refs/tags/portolio-')
    runs-on: ubuntu-latest
    env:
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_PORTFOLIO_SITE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Node
        uses: oven-sh/setup-bun@v2

      - name: Deploy to Vercel
        run: bun install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  deploy_portfolio_cms:
    if: startsWith(github.ref, 'refs/tags/cms-')
    runs-on: ubuntu-latest
    env:
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_CMS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Node
        uses: oven-sh/setup-bun@v2

      - name: Deploy to Vercel
        run: bun install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
